# Nombre del flujo de trabajo, aparecerá en la pestaña "Actions" de GitHub
name: Deploy Frontend to Hostinger

# Disparador: Este flujo se ejecuta cada vez que hay un push a la rama "main"
on:
  push:
    branches:
      - main

# Trabajos: Lista de tareas que el robot debe ejecutar
jobs:
  build-and-deploy:
    # El tipo de máquina que usará el robot (Ubuntu es estándar)
    runs-on: ubuntu-latest

    # Pasos: La secuencia de acciones a realizar
    steps:
      # 1. Descarga el código del repositorio a la máquina del robot
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configura Node.js para que podamos usar npm
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3. Entra en la carpeta frontend e instala las dependencias
      - name: Install dependencies
        run: |
          cd frontend
          npm install

      # 4. Construye la aplicación de producción
      - name: Build application
        run: |
          cd frontend
          npm run build

      # 5. Configura la clave SSH para la conexión
      - name: Setup SSH
        # Usamos una acción estándar para cargar nuestra clave privada de forma segura
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 6. Sube los archivos compilados a Hostinger vía rsync
      - name: Deploy to Hostinger via rsync
        # Ejecutamos un comando directo de rsync, sin depender de acciones de terceros para el deploy
        run: rsync -avz --delete ./frontend/dist/ ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_SERVER }}:public_html

